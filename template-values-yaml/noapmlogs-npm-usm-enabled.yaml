targetSystem: "linux"
datadog:
  clusterName: <ENTER_CLUSTER_NAME>
  apiKey: <ENTER_DATADOG_API_KEY>
  site: <ENTER_DATADOG_SITE>
  ## Set to 'datadoghq.com' to send data to the US1 site (default).
  ## Set to 'datadoghq.eu' to send data to the EU site.
  ## Set to 'us3.datadoghq.com' to send data to the US3 site.
  ## Set to 'us5.datadoghq.com' to send data to the US5 site.
  ## Set to 'ddog-gov.com' to send data to the US1-FED site.
  ## Set to 'ap1.datadoghq.com' to send data to the AP1 site.
  env:
     - name: DD_ENV
       value: <DD_ENV> #Setting this will ensure all of the services identifed via usm report to a particular env when viewing the Service Catalog
  clusterChecks:
    enabled: false
  apm:
    socketEnabled: false #required for APM Trace Collection via UNIX Domain Socket https://docs.datadoghq.com/containers/kubernetes/apm/?tab=uds#configure-the-datadog-agent-to-accept-traces 
    portEnabled: false #required for APM Trace Collection via local host port 8126
  logs:
    enabled: false #required for Log Collection
    containerCollectAll: false #required to collect all conatiner logs 
  processAgent:
    processCollection: true #required for Live Containers View & Live Process collection
  dogstatsd:
    port: 8125 
    useHostPort: true
  kubeStateMetricsCore:
    enabled: true
  kubeStateMetricsEnabled: false
  kubelet:
    tlsVerify: false #required for AKS, default=true
  networkMonitoring:
    enabled: false #required to use Datadog Network Performance Monitoring
  serviceMonitoring:
    enabled: true #required to use Datadog Universal Service Monitoring  
  securityAgent:
    compliance:
      enabled: false #required for Datadog Cloud Security Managment Enterprise 
    runtime:
      enabled: false #required for Dataadog Cloud Workload Security 
clusterAgent:
  enabled: true
  replicas: 2 #Default is 1, increase for HA as needed
  admissionController:
    # clusterAgent.admissionController.enabled -- Enable the admissionController to be able to inject APM/Dogstatsd config and standard tags (env, service, version) automatically into your pods
    enabled: true
  confd:
    kube_apiserver_metrics.yaml: |-
      cluster_check: true
      init_config:
      instances:
        - prometheus_url: https://kubernetes.default/metrics
          ssl_ca_cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_auth: true
clusterChecksRunner:
  enabled: false
  replicas: 2
